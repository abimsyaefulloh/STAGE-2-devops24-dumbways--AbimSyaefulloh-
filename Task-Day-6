```bash
Sebelum mengerjakan tugas, mohon persiapkan :
- Akun Github dan buat repository dengan judul "devops24-dumbways-<nama kalian>"
- Gunakan file README.md untuk isi tugas kalian
- Buatlah langkah-langkah pengerjaan tugas beserta dokumentasinya

=========================================
**Reference**
[ansible-installation](https://docs.ansible.com/ansible/latest/installation_guide/installation_distros.html)
[ansible-module](https://docs.ansible.com/ansible/2.9/modules/list_of_all_modules.html)


**Ansible**

[Local]
Buat konfigurasi Ansible & sebisa mungkin maksimalkan penggunaan ansbile untuk melakukan semua setup dan se freestyle kalian 

[ansible]
Buatlah ansible untuk :
 - Membuat user baru, gunakan login ssh key & password
 - Instalasi Docker
 - Deploy application frontend yang sudah kalian gunakan sebelumnya menggunakan ansible.
 - Instalasi Monitoring Server (node exporter, prometheus, grafana)
 - Setup reverse-proxy
 - Generated SSL certificate
 - simpan script kalian ke dalam github dengan format tree sebagai berikut:
  Automation  
  |  
  | Terraform
  └─|   └── gcp
       │   └── main.tf
       │    └── providers.tf
       │    └── etc
       │   ├── aws
       │    └── main.tf
       │    └── providers.tf
       │    └── etc
       │  ├── azure
       │    └── main.tf
       │    └── providers.tf
       │    └── etc
    Ansible
    ├── ansible.cfg
    ├── lolrandom1.yaml
    ├── group_vars
    │ └── all
    ├── Inventory
    ├── lolrandom2.yaml
    └── lolrandom3.yaml
```

## Langkah-langkah Tugas Day 6 - Ansible (Automasi Konfigurasi Server)

1. **Persiapan Repository dan Struktur Folder**  
   - Buat folder `Automation/Ansible`  
   - Siapkan file `ansible.cfg`, `Inventory`, dan folder `group_vars`  
   - Buat beberapa playbook YAML sesuai kebutuhan (misal `lolrandom1.yaml`, dll)

2. **Konfigurasi Inventory**  
   - Masukkan IP static server hasil Terraform ke file Inventory  
   - Kelompokkan server jika perlu (misal group ubuntu, debian, monitoring)

3. **Buat Variabel Global**  
   - Definisikan variabel umum di `group_vars/all` seperti user, password, ssh key path

4. **Playbook Membuat User Baru**  
   - Buat playbook untuk membuat user baru di server  
   - Konfigurasi login menggunakan SSH key dan password

5. **Playbook Instalasi Docker**  
   - Buat playbook untuk menginstall Docker di server target

6. **Playbook Deploy Aplikasi Frontend**  
   - Automasi deployment aplikasi frontend yang sudah pernah digunakan  
   - Pastikan aplikasi berjalan dengan baik setelah deploy

7. **Playbook Instalasi Monitoring Server**  
   - Instal node exporter, Prometheus, dan Grafana menggunakan Ansible  
   - Konfigurasi monitoring agar bisa memantau server

8. **Playbook Setup Reverse Proxy**  
   - Setup reverse proxy (misal Nginx atau Traefik) untuk aplikasi frontend

9. **Playbook Generate SSL Certificate**  
   - Automasi pembuatan SSL certificate (Let's Encrypt atau self-signed)

10. **Jalankan dan Verifikasi Playbook**  
    - Jalankan playbook dengan `ansible-playbook`  
    - Verifikasi semua konfigurasi berjalan sesuai harapan

11. **Dokumentasi dan Commit**  
    - Dokumentasikan langkah dan hasil di `README.md`  
    - Commit dan push seluruh konfigurasi Ansible ke GitHub dengan struktur folder yang sudah ditentukan

---

Kalau kamu mau, saya juga bisa bantu buatkan template README.md untuk dokumentasi tugasmu. Semoga membantu!
